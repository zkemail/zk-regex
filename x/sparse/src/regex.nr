global table: sparse_array::SparseArray<1197, Field> = sparse_array::SparseArray {
    keys: [0x00000000, 0x0000000d, 0x000000ff, 0x0000010a, 0x00000273, 0x00000375, 0x00000462, 0x0000056a, 0x00000665, 0x00000763, 0x00000874, 0x0000093a, 0x00000a00, 0x00000a01, 0x00000a02, 0x00000a03, 0x00000a04, 0x00000a05, 0x00000a06, 0x00000a07, 0x00000a08, 0x00000a09, 0x00000a0b, 0x00000a0c, 0x00000a0e, 0x00000a0f, 0x00000a10, 0x00000a11, 0x00000a12, 0x00000a13, 0x00000a14, 0x00000a15, 0x00000a16, 0x00000a17, 0x00000a18, 0x00000a19, 0x00000a1a, 0x00000a1b, 0x00000a1c, 0x00000a1d, 0x00000a1e, 0x00000a1f, 0x00000a20, 0x00000a21, 0x00000a22, 0x00000a23, 0x00000a24, 0x00000a25, 0x00000a26, 0x00000a27, 0x00000a28, 0x00000a29, 0x00000a2a, 0x00000a2b, 0x00000a2c, 0x00000a2d, 0x00000a2e, 0x00000a2f, 0x00000a30, 0x00000a31, 0x00000a32, 0x00000a33, 0x00000a34, 0x00000a35, 0x00000a36, 0x00000a37, 0x00000a38, 0x00000a39, 0x00000a3a, 0x00000a3b, 0x00000a3c, 0x00000a3d, 0x00000a3e, 0x00000a3f, 0x00000a40, 0x00000a41, 0x00000a42, 0x00000a43, 0x00000a44, 0x00000a45, 0x00000a46, 0x00000a47, 0x00000a48, 0x00000a49, 0x00000a4a, 0x00000a4b, 0x00000a4c, 0x00000a4d, 0x00000a4e, 0x00000a4f, 0x00000a50, 0x00000a51, 0x00000a52, 0x00000a53, 0x00000a54, 0x00000a55, 0x00000a56, 0x00000a57, 0x00000a58, 0x00000a59, 0x00000a5a, 0x00000a5b, 0x00000a5c, 0x00000a5d, 0x00000a5e, 0x00000a5f, 0x00000a60, 0x00000a61, 0x00000a62, 0x00000a63, 0x00000a64, 0x00000a65, 0x00000a66, 0x00000a67, 0x00000a68, 0x00000a69, 0x00000a6a, 0x00000a6b, 0x00000a6c, 0x00000a6d, 0x00000a6e, 0x00000a6f, 0x00000a70, 0x00000a71, 0x00000a72, 0x00000a73, 0x00000a74, 0x00000a75, 0x00000a76, 0x00000a77, 0x00000a78, 0x00000a79, 0x00000a7a, 0x00000a7b, 0x00000a7c, 0x00000a7d, 0x00000a7e, 0x00000a7f, 0x00000ac2, 0x00000ac3, 0x00000ac4, 0x00000ac5, 0x00000ac6, 0x00000ac7, 0x00000ac8, 0x00000ac9, 0x00000aca, 0x00000acb, 0x00000acc, 0x00000acd, 0x00000ace, 0x00000acf, 0x00000ad0, 0x00000ad1, 0x00000ad2, 0x00000ad3, 0x00000ad4, 0x00000ad5, 0x00000ad6, 0x00000ad7, 0x00000ad8, 0x00000ad9, 0x00000ada, 0x00000adb, 0x00000adc, 0x00000add, 0x00000ade, 0x00000adf, 0x00000ae0, 0x00000ae1, 0x00000ae2, 0x00000ae3, 0x00000ae4, 0x00000ae5, 0x00000ae6, 0x00000ae7, 0x00000ae8, 0x00000ae9, 0x00000aea, 0x00000aeb, 0x00000aec, 0x00000aed, 0x00000aee, 0x00000aef, 0x00000af0, 0x00000af1, 0x00000af2, 0x00000af3, 0x00000af4, 0x00000b00, 0x00000b01, 0x00000b02, 0x00000b03, 0x00000b04, 0x00000b05, 0x00000b06, 0x00000b07, 0x00000b08, 0x00000b09, 0x00000b0b, 0x00000b0c, 0x00000b0d, 0x00000b0e, 0x00000b0f, 0x00000b10, 0x00000b11, 0x00000b12, 0x00000b13, 0x00000b14, 0x00000b15, 0x00000b16, 0x00000b17, 0x00000b18, 0x00000b19, 0x00000b1a, 0x00000b1b, 0x00000b1c, 0x00000b1d, 0x00000b1e, 0x00000b1f, 0x00000b20, 0x00000b21, 0x00000b22, 0x00000b23, 0x00000b24, 0x00000b25, 0x00000b26, 0x00000b27, 0x00000b28, 0x00000b29, 0x00000b2a, 0x00000b2b, 0x00000b2c, 0x00000b2d, 0x00000b2e, 0x00000b2f, 0x00000b30, 0x00000b31, 0x00000b32, 0x00000b33, 0x00000b34, 0x00000b35, 0x00000b36, 0x00000b37, 0x00000b38, 0x00000b39, 0x00000b3a, 0x00000b3b, 0x00000b3c, 0x00000b3d, 0x00000b3e, 0x00000b3f, 0x00000b40, 0x00000b41, 0x00000b42, 0x00000b43, 0x00000b44, 0x00000b45, 0x00000b46, 0x00000b47, 0x00000b48, 0x00000b49, 0x00000b4a, 0x00000b4b, 0x00000b4c, 0x00000b4d, 0x00000b4e, 0x00000b4f, 0x00000b50, 0x00000b51, 0x00000b52, 0x00000b53, 0x00000b54, 0x00000b55, 0x00000b56, 0x00000b57, 0x00000b58, 0x00000b59, 0x00000b5a, 0x00000b5b, 0x00000b5c, 0x00000b5d, 0x00000b5e, 0x00000b5f, 0x00000b60, 0x00000b61, 0x00000b62, 0x00000b63, 0x00000b64, 0x00000b65, 0x00000b66, 0x00000b67, 0x00000b68, 0x00000b69, 0x00000b6a, 0x00000b6b, 0x00000b6c, 0x00000b6d, 0x00000b6e, 0x00000b6f, 0x00000b70, 0x00000b71, 0x00000b72, 0x00000b73, 0x00000b74, 0x00000b75, 0x00000b76, 0x00000b77, 0x00000b78, 0x00000b79, 0x00000b7a, 0x00000b7b, 0x00000b7c, 0x00000b7d, 0x00000b7e, 0x00000b7f, 0x00000bc2, 0x00000bc3, 0x00000bc4, 0x00000bc5, 0x00000bc6, 0x00000bc7, 0x00000bc8, 0x00000bc9, 0x00000bca, 0x00000bcb, 0x00000bcc, 0x00000bcd, 0x00000bce, 0x00000bcf, 0x00000bd0, 0x00000bd1, 0x00000bd2, 0x00000bd3, 0x00000bd4, 0x00000bd5, 0x00000bd6, 0x00000bd7, 0x00000bd8, 0x00000bd9, 0x00000bda, 0x00000bdb, 0x00000bdc, 0x00000bdd, 0x00000bde, 0x00000bdf, 0x00000be0, 0x00000be1, 0x00000be2, 0x00000be3, 0x00000be4, 0x00000be5, 0x00000be6, 0x00000be7, 0x00000be8, 0x00000be9, 0x00000bea, 0x00000beb, 0x00000bec, 0x00000bed, 0x00000bee, 0x00000bef, 0x00000bf0, 0x00000bf1, 0x00000bf2, 0x00000bf3, 0x00000bf4, 0x00000c80, 0x00000c81, 0x00000c82, 0x00000c83, 0x00000c84, 0x00000c85, 0x00000c86, 0x00000c87, 0x00000c88, 0x00000c89, 0x00000c8a, 0x00000c8b, 0x00000c8c, 0x00000c8d, 0x00000c8e, 0x00000c8f, 0x00000c90, 0x00000c91, 0x00000c92, 0x00000c93, 0x00000c94, 0x00000c95, 0x00000c96, 0x00000c97, 0x00000c98, 0x00000c99, 0x00000c9a, 0x00000c9b, 0x00000c9c, 0x00000c9d, 0x00000c9e, 0x00000c9f, 0x00000ca0, 0x00000ca1, 0x00000ca2, 0x00000ca3, 0x00000ca4, 0x00000ca5, 0x00000ca6, 0x00000ca7, 0x00000ca8, 0x00000ca9, 0x00000caa, 0x00000cab, 0x00000cac, 0x00000cad, 0x00000cae, 0x00000caf, 0x00000cb0, 0x00000cb1, 0x00000cb2, 0x00000cb3, 0x00000cb4, 0x00000cb5, 0x00000cb6, 0x00000cb7, 0x00000cb8, 0x00000cb9, 0x00000cba, 0x00000cbb, 0x00000cbc, 0x00000cbd, 0x00000cbe, 0x00000cbf, 0x00000da0, 0x00000da1, 0x00000da2, 0x00000da3, 0x00000da4, 0x00000da5, 0x00000da6, 0x00000da7, 0x00000da8, 0x00000da9, 0x00000daa, 0x00000dab, 0x00000dac, 0x00000dad, 0x00000dae, 0x00000daf, 0x00000db0, 0x00000db1, 0x00000db2, 0x00000db3, 0x00000db4, 0x00000db5, 0x00000db6, 0x00000db7, 0x00000db8, 0x00000db9, 0x00000dba, 0x00000dbb, 0x00000dbc, 0x00000dbd, 0x00000dbe, 0x00000dbf, 0x00000e80, 0x00000e81, 0x00000e82, 0x00000e83, 0x00000e84, 0x00000e85, 0x00000e86, 0x00000e87, 0x00000e88, 0x00000e89, 0x00000e8a, 0x00000e8b, 0x00000e8c, 0x00000e8d, 0x00000e8e, 0x00000e8f, 0x00000e90, 0x00000e91, 0x00000e92, 0x00000e93, 0x00000e94, 0x00000e95, 0x00000e96, 0x00000e97, 0x00000e98, 0x00000e99, 0x00000e9a, 0x00000e9b, 0x00000e9c, 0x00000e9d, 0x00000e9e, 0x00000e9f, 0x00000ea0, 0x00000ea1, 0x00000ea2, 0x00000ea3, 0x00000ea4, 0x00000ea5, 0x00000ea6, 0x00000ea7, 0x00000ea8, 0x00000ea9, 0x00000eaa, 0x00000eab, 0x00000eac, 0x00000ead, 0x00000eae, 0x00000eaf, 0x00000eb0, 0x00000eb1, 0x00000eb2, 0x00000eb3, 0x00000eb4, 0x00000eb5, 0x00000eb6, 0x00000eb7, 0x00000eb8, 0x00000eb9, 0x00000eba, 0x00000ebb, 0x00000ebc, 0x00000ebd, 0x00000ebe, 0x00000ebf, 0x00000f80, 0x00000f81, 0x00000f82, 0x00000f83, 0x00000f84, 0x00000f85, 0x00000f86, 0x00000f87, 0x00000f88, 0x00000f89, 0x00000f8a, 0x00000f8b, 0x00000f8c, 0x00000f8d, 0x00000f8e, 0x00000f8f, 0x00000f90, 0x00000f91, 0x00000f92, 0x00000f93, 0x00000f94, 0x00000f95, 0x00000f96, 0x00000f97, 0x00000f98, 0x00000f99, 0x00000f9a, 0x00000f9b, 0x00000f9c, 0x00000f9d, 0x00000f9e, 0x00000f9f, 0x00001090, 0x00001091, 0x00001092, 0x00001093, 0x00001094, 0x00001095, 0x00001096, 0x00001097, 0x00001098, 0x00001099, 0x0000109a, 0x0000109b, 0x0000109c, 0x0000109d, 0x0000109e, 0x0000109f, 0x000010a0, 0x000010a1, 0x000010a2, 0x000010a3, 0x000010a4, 0x000010a5, 0x000010a6, 0x000010a7, 0x000010a8, 0x000010a9, 0x000010aa, 0x000010ab, 0x000010ac, 0x000010ad, 0x000010ae, 0x000010af, 0x000010b0, 0x000010b1, 0x000010b2, 0x000010b3, 0x000010b4, 0x000010b5, 0x000010b6, 0x000010b7, 0x000010b8, 0x000010b9, 0x000010ba, 0x000010bb, 0x000010bc, 0x000010bd, 0x000010be, 0x000010bf, 0x00001180, 0x00001181, 0x00001182, 0x00001183, 0x00001184, 0x00001185, 0x00001186, 0x00001187, 0x00001188, 0x00001189, 0x0000118a, 0x0000118b, 0x0000118c, 0x0000118d, 0x0000118e, 0x0000118f, 0x00001190, 0x00001191, 0x00001192, 0x00001193, 0x00001194, 0x00001195, 0x00001196, 0x00001197, 0x00001198, 0x00001199, 0x0000119a, 0x0000119b, 0x0000119c, 0x0000119d, 0x0000119e, 0x0000119f, 0x000011a0, 0x000011a1, 0x000011a2, 0x000011a3, 0x000011a4, 0x000011a5, 0x000011a6, 0x000011a7, 0x000011a8, 0x000011a9, 0x000011aa, 0x000011ab, 0x000011ac, 0x000011ad, 0x000011ae, 0x000011af, 0x000011b0, 0x000011b1, 0x000011b2, 0x000011b3, 0x000011b4, 0x000011b5, 0x000011b6, 0x000011b7, 0x000011b8, 0x000011b9, 0x000011ba, 0x000011bb, 0x000011bc, 0x000011bd, 0x000011be, 0x000011bf, 0x00001280, 0x00001281, 0x00001282, 0x00001283, 0x00001284, 0x00001285, 0x00001286, 0x00001287, 0x00001288, 0x00001289, 0x0000128a, 0x0000128b, 0x0000128c, 0x0000128d, 0x0000128e, 0x0000128f, 0x0000130a, 0x00001400, 0x00001401, 0x00001402, 0x00001403, 0x00001404, 0x00001405, 0x00001406, 0x00001407, 0x00001408, 0x00001409, 0x0000140a, 0x0000140b, 0x0000140c, 0x0000140d, 0x0000140e, 0x0000140f, 0x00001410, 0x00001411, 0x00001412, 0x00001413, 0x00001414, 0x00001415, 0x00001416, 0x00001417, 0x00001418, 0x00001419, 0x0000141a, 0x0000141b, 0x0000141c, 0x0000141d, 0x0000141e, 0x0000141f, 0x00001420, 0x00001421, 0x00001422, 0x00001423, 0x00001424, 0x00001425, 0x00001426, 0x00001427, 0x00001428, 0x00001429, 0x0000142a, 0x0000142b, 0x0000142c, 0x0000142d, 0x0000142e, 0x0000142f, 0x00001430, 0x00001431, 0x00001432, 0x00001433, 0x00001434, 0x00001435, 0x00001436, 0x00001437, 0x00001438, 0x00001439, 0x0000143a, 0x0000143b, 0x0000143c, 0x0000143d, 0x0000143e, 0x0000143f, 0x00001440, 0x00001441, 0x00001442, 0x00001443, 0x00001444, 0x00001445, 0x00001446, 0x00001447, 0x00001448, 0x00001449, 0x0000144a, 0x0000144b, 0x0000144c, 0x0000144d, 0x0000144e, 0x0000144f, 0x00001450, 0x00001451, 0x00001452, 0x00001453, 0x00001454, 0x00001455, 0x00001456, 0x00001457, 0x00001458, 0x00001459, 0x0000145a, 0x0000145b, 0x0000145c, 0x0000145d, 0x0000145e, 0x0000145f, 0x00001460, 0x00001461, 0x00001462, 0x00001463, 0x00001464, 0x00001465, 0x00001466, 0x00001467, 0x00001468, 0x00001469, 0x0000146a, 0x0000146b, 0x0000146c, 0x0000146d, 0x0000146e, 0x0000146f, 0x00001470, 0x00001471, 0x00001472, 0x00001473, 0x00001474, 0x00001475, 0x00001476, 0x00001477, 0x00001478, 0x00001479, 0x0000147a, 0x0000147b, 0x0000147c, 0x0000147d, 0x0000147e, 0x0000147f, 0x00001480, 0x00001481, 0x00001482, 0x00001483, 0x00001484, 0x00001485, 0x00001486, 0x00001487, 0x00001488, 0x00001489, 0x0000148a, 0x0000148b, 0x0000148c, 0x0000148d, 0x0000148e, 0x0000148f, 0x00001490, 0x00001491, 0x00001492, 0x00001493, 0x00001494, 0x00001495, 0x00001496, 0x00001497, 0x00001498, 0x00001499, 0x0000149a, 0x0000149b, 0x0000149c, 0x0000149d, 0x0000149e, 0x0000149f, 0x000014a0, 0x000014a1, 0x000014a2, 0x000014a3, 0x000014a4, 0x000014a5, 0x000014a6, 0x000014a7, 0x000014a8, 0x000014a9, 0x000014aa, 0x000014ab, 0x000014ac, 0x000014ad, 0x000014ae, 0x000014af, 0x000014b0, 0x000014b1, 0x000014b2, 0x000014b3, 0x000014b4, 0x000014b5, 0x000014b6, 0x000014b7, 0x000014b8, 0x000014b9, 0x000014ba, 0x000014bb, 0x000014bc, 0x000014bd, 0x000014be, 0x000014bf, 0x000014c0, 0x000014c1, 0x000014c2, 0x000014c3, 0x000014c4, 0x000014c5, 0x000014c6, 0x000014c7, 0x000014c8, 0x000014c9, 0x000014ca, 0x000014cb, 0x000014cc, 0x000014cd, 0x000014ce, 0x000014cf, 0x000014d0, 0x000014d1, 0x000014d2, 0x000014d3, 0x000014d4, 0x000014d5, 0x000014d6, 0x000014d7, 0x000014d8, 0x000014d9, 0x000014da, 0x000014db, 0x000014dc, 0x000014dd, 0x000014de, 0x000014df, 0x000014e0, 0x000014e1, 0x000014e2, 0x000014e3, 0x000014e4, 0x000014e5, 0x000014e6, 0x000014e7, 0x000014e8, 0x000014e9, 0x000014ea, 0x000014eb, 0x000014ec, 0x000014ed, 0x000014ee, 0x000014ef, 0x000014f0, 0x000014f1, 0x000014f2, 0x000014f3, 0x000014f4, 0x000014f5, 0x000014f6, 0x000014f7, 0x000014f8, 0x000014f9, 0x000014fa, 0x000014fb, 0x000014fc, 0x000014fd, 0x000014fe, 0x00001500, 0x00001501, 0x00001502, 0x00001503, 0x00001504, 0x00001505, 0x00001506, 0x00001507, 0x00001508, 0x00001509, 0x0000150a, 0x0000150b, 0x0000150c, 0x0000150d, 0x0000150e, 0x0000150f, 0x00001510, 0x00001511, 0x00001512, 0x00001513, 0x00001514, 0x00001515, 0x00001516, 0x00001517, 0x00001518, 0x00001519, 0x0000151a, 0x0000151b, 0x0000151c, 0x0000151d, 0x0000151e, 0x0000151f, 0x00001520, 0x00001521, 0x00001522, 0x00001523, 0x00001524, 0x00001525, 0x00001526, 0x00001527, 0x00001528, 0x00001529, 0x0000152a, 0x0000152b, 0x0000152c, 0x0000152d, 0x0000152e, 0x0000152f, 0x00001530, 0x00001531, 0x00001532, 0x00001533, 0x00001534, 0x00001535, 0x00001536, 0x00001537, 0x00001538, 0x00001539, 0x0000153a, 0x0000153b, 0x0000153c, 0x0000153d, 0x0000153e, 0x0000153f, 0x00001540, 0x00001541, 0x00001542, 0x00001543, 0x00001544, 0x00001545, 0x00001546, 0x00001547, 0x00001548, 0x00001549, 0x0000154a, 0x0000154b, 0x0000154c, 0x0000154d, 0x0000154e, 0x0000154f, 0x00001550, 0x00001551, 0x00001552, 0x00001553, 0x00001554, 0x00001555, 0x00001556, 0x00001557, 0x00001558, 0x00001559, 0x0000155a, 0x0000155b, 0x0000155c, 0x0000155d, 0x0000155e, 0x0000155f, 0x00001560, 0x00001561, 0x00001562, 0x00001563, 0x00001564, 0x00001565, 0x00001566, 0x00001567, 0x00001568, 0x00001569, 0x0000156a, 0x0000156b, 0x0000156c, 0x0000156d, 0x0000156e, 0x0000156f, 0x00001570, 0x00001571, 0x00001572, 0x00001573, 0x00001574, 0x00001575, 0x00001576, 0x00001577, 0x00001578, 0x00001579, 0x0000157a, 0x0000157b, 0x0000157c, 0x0000157d, 0x0000157e, 0x0000157f, 0x00001580, 0x00001581, 0x00001582, 0x00001583, 0x00001584, 0x00001585, 0x00001586, 0x00001587, 0x00001588, 0x00001589, 0x0000158a, 0x0000158b, 0x0000158c, 0x0000158d, 0x0000158e, 0x0000158f, 0x00001590, 0x00001591, 0x00001592, 0x00001593, 0x00001594, 0x00001595, 0x00001596, 0x00001597, 0x00001598, 0x00001599, 0x0000159a, 0x0000159b, 0x0000159c, 0x0000159d, 0x0000159e, 0x0000159f, 0x000015a0, 0x000015a1, 0x000015a2, 0x000015a3, 0x000015a4, 0x000015a5, 0x000015a6, 0x000015a7, 0x000015a8, 0x000015a9, 0x000015aa, 0x000015ab, 0x000015ac, 0x000015ad, 0x000015ae, 0x000015af, 0x000015b0, 0x000015b1, 0x000015b2, 0x000015b3, 0x000015b4, 0x000015b5, 0x000015b6, 0x000015b7, 0x000015b8, 0x000015b9, 0x000015ba, 0x000015bb, 0x000015bc, 0x000015bd, 0x000015be, 0x000015bf, 0x000015c0, 0x000015c1, 0x000015c2, 0x000015c3, 0x000015c4, 0x000015c5, 0x000015c6, 0x000015c7, 0x000015c8, 0x000015c9, 0x000015ca, 0x000015cb, 0x000015cc, 0x000015cd, 0x000015ce, 0x000015cf, 0x000015d0, 0x000015d1, 0x000015d2, 0x000015d3, 0x000015d4, 0x000015d5, 0x000015d6, 0x000015d7, 0x000015d8, 0x000015d9, 0x000015da, 0x000015db, 0x000015dc, 0x000015dd, 0x000015de, 0x000015df, 0x000015e0, 0x000015e1, 0x000015e2, 0x000015e3, 0x000015e4, 0x000015e5, 0x000015e6, 0x000015e7, 0x000015e8, 0x000015e9, 0x000015ea, 0x000015eb, 0x000015ec, 0x000015ed, 0x000015ee, 0x000015ef, 0x000015f0, 0x000015f1, 0x000015f2, 0x000015f3, 0x000015f4, 0x000015f5, 0x000015f6, 0x000015f7, 0x000015f8, 0x000015f9, 0x000015fa, 0x000015fb, 0x000015fc, 0x000015fd, 0x000015fe, 0x000015ff],
    values: [0x00000000, 0x00000000, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000f, 0x0000000c, 0x00000010, 0x0000000c, 0x00000011, 0x0000000c, 0x00000011, 0x0000000c, 0x00000011, 0x0000000c, 0x00000012, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000c, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000d, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000f, 0x0000000e, 0x00000010, 0x0000000e, 0x00000011, 0x0000000e, 0x00000011, 0x0000000e, 0x00000011, 0x0000000e, 0x00000012, 0x0000000e, 0x00000013, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000b, 0x0000000e, 0x0000000c, 0x0000000e, 0x0000000c, 0x00000014, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000015, 0x00000001, 0x00000002, 0x00000002, 0x00000003, 0x00000004, 0x00000005, 0x00000006, 0x00000007, 0x00000008, 0x00000009, 0x0000000a, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000d, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x0000000e, 0x00000000],
    maximum: 0x000015ff
};

            
pub fn regex_match<let N: u32>(input: [u8; N]) -> BoundedVec<BoundedVec<Field, N>, 1> {
    let (substrings, start, end) = unsafe { __regex_match(input) };
    
    // "Previous" state
    let mut s: Field = 0;
    s = table.get(255);
    // "Next"/upcoming state
    let mut s_next: Field = 0;

    // check the match
    for i in 0..N {
        let temp = input[i] as Field;
        let mut s_next_idx = s * 256 + temp;
        if s_next == 0 {
          // Check if there is any transition that could be done from a "restart"
          s_next_idx = temp;
          // whether the next state changes or not, we mark this as a reset.
          s = 0;
        }
        s_next = table.get(s_next_idx);
        let range = i >= start & i <= end;
        let cases = [
            (s == 10) & (s_next == 11),
            (s == 10) & (s_next == 12),
            (s == 10) & (s_next == 13),
            (s == 10) & (s_next == 14),
            (s == 10) & (s_next == 15),
            (s == 10) & (s_next == 16),
            (s == 10) & (s_next == 17),
            (s == 10) & (s_next == 18),
            (s == 11) & (s_next == 11),
            (s == 11) & (s_next == 12),
            (s == 11) & (s_next == 13),
            (s == 11) & (s_next == 14),
            (s == 11) & (s_next == 15),
            (s == 11) & (s_next == 16),
            (s == 11) & (s_next == 17),
            (s == 11) & (s_next == 18),
            (s == 12) & (s_next == 11),
            (s == 13) & (s_next == 12),
            (s == 14) & (s_next == 12),
            (s == 15) & (s_next == 12),
            (s == 16) & (s_next == 14),
            (s == 17) & (s_next == 14),
            (s == 18) & (s_next == 14),
            (s == 20) & (s_next == 21),
            (s == 21) & (s_next == 21)
		];
        // idk why have to say == true
        let found = cases.any(|case|  case == true | range == false );
        s = s_next;
        assert(found, "no match");
    }
    // check final state
    assert((s == 20) | (s == 21), f"no match: {s}");

    substrings
}

pub unconstrained fn __regex_match<let N: u32>(input: [u8; N]) -> (BoundedVec<BoundedVec<Field, N>, 1>, u32, u32) {
    // regex: (\r\n|^)subject:[^\r\n]+\r\n
    let mut substrings: BoundedVec<BoundedVec<Field, N>, 1> = BoundedVec::new();

    // "Previous" state
    let mut s: Field = 0;
    s = table.get(255);
    // "Next"/upcoming state
    let mut s_next: Field = 0;

    let mut consecutive_substr = 0;
    let mut current_substring = BoundedVec::new();
    let mut start_index = 0;
    let mut end_index = 0;
    let mut complete = false;

    for i in 0..input.len() {
        let temp = input[i] as Field;
        let mut reset = false;
        let mut s_next_idx = s * 256 + temp;
        if s_next == 0 {
          // Check if there is any transition that could be done from a "restart"
          s_next_idx = temp;
          // whether the next state changes or not, we mark this as a reset.
          reset = true;
          s = 0;
        }
        s_next = table.get(s_next_idx);
        

        // If a substring was in the making, but the state was reset
        // we disregard previous progress because apparently it is invalid
        if (reset & (consecutive_substr == 1)) {
            current_substring = BoundedVec::new();
            consecutive_substr = 0;
        }
        // Fill up substrings
        if ((s == 10) & (s_next == 11) | (s == 10) & (s_next == 12) | (s == 10) & (s_next == 13) | (s == 10) & (s_next == 14) | (s == 10) & (s_next == 15) | (s == 10) & (s_next == 16) | (s == 10) & (s_next == 17) | (s == 10) & (s_next == 18) | (s == 11) & (s_next == 11) | (s == 11) & (s_next == 12) | (s == 11) & (s_next == 13) | (s == 11) & (s_next == 14) | (s == 11) & (s_next == 15) | (s == 11) & (s_next == 16) | (s == 11) & (s_next == 17) | (s == 11) & (s_next == 18) | (s == 12) & (s_next == 11) | (s == 13) & (s_next == 12) | (s == 14) & (s_next == 12) | (s == 15) & (s_next == 12) | (s == 16) & (s_next == 14) | (s == 17) & (s_next == 14) | (s == 18) & (s_next == 14)) {
            	if (consecutive_substr == 0) {
                start_index = i;
            };

            current_substring.push(temp);
            consecutive_substr = 1;   
        } else if ((consecutive_substr == 1) & (s_next == 0)) {
            current_substring = BoundedVec::new();
            substrings = BoundedVec::new();
            consecutive_substr = 0;
            start_index = 0;
            end_index = 0;
        } else if (s == 20) & (s_next == 21) {
            end_index = i;
            complete = true;
            break;
        } else if (consecutive_substr == 1) {
            // The substring is done so "save" it
            substrings.push(current_substring);
            // reset the substring holder for next use
            current_substring = BoundedVec::new();
            consecutive_substr = 0;
        }
        s = s_next;
    }
    assert((s == 20) | (s == 21), f"no match: {s}");
    // Add pending substring that hasn't been added
    if consecutive_substr == 1 {
        substrings.push(current_substring);
    }
    (substrings, start_index, end_index)
}